<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\dita\specification\temp\pdf\archSpec\base?><?workdir-uri file:/C:/Git/dita/specification/temp/pdf/archSpec/base/?><?path2project ..\..\?><?path2project-uri ../../?><?path2rootmap-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept) (topic abbrev-d) a(props deliveryTarget) (topic equation-d) (topic hazard-d) (topic hi-d) (topic indexing-d) (topic markup-d) (topic mathml-d) (topic pr-d) (topic relmgmt-d) (topic sw-d) (topic svg-d) (topic ui-d) (topic ut-d) (topic markup-d xml-d)" id="filtering" xml:lang="en-us" xtrc="concept:1;3:42" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">
 <title class="- topic/title " xtrc="title:1;4:9" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">Filtering</title>
 <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;5:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">At processing time, a conditional processing profile can be used to specify profiling
  attribute values that determine whether an element with those values is included or
  excluded.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;14:11" xtrf="file:/C:/Git/dita/specification/dita-2.0-specification.ditamap">OASIS DITA Technical Committee</author></prolog>
 <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;8:11" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">
  <p class="- topic/p " xtrc="p:1;9:6" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">By default, values in conditional processing attributes that are not defined in a DITAVAL
   profile evaluate to "include". For example, if the value audience="novice" is used on a
   paragraph, but this value is not defined in a DITAVAL profile, the attribute evaluates to
   "include".</p>
  <p class="- topic/p " xtrc="p:2;13:6" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">However, the DITAVAL profile can change this default to "exclude", so that any value not
   explicitly defined in the DITAVAL profile will evaluate to "exclude". The DITAVAL profile also
   can be used to change the default for a single attribute; for example, it can declare that values
   in the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;16:19" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">platform</xmlatt> attribute default to "exclude", while those in the
    <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;17:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">product</xmlatt> attribute default to include. See <xref class="- topic/xref " href="../../langRef/containers/ditaval-elements.dita" xtrc="xref:1;18:60" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita" type="reference"><?ditaot gentext?>DITAVAL elements<?ditaot genshortdesc?><desc class="- topic/desc ">A conditional processing profile (DITAVAL file) is used to identify which values are to         be used for conditional processing during a particular output, build, or some other purpose.         The profile should have an extension of <filepath class="+ topic/ph sw-d/filepath " xtrc="filepath:1;8:59" xtrf="file:/C:/Git/dita/specification/langRef/containers/ditaval-elements.dita">.ditaval</filepath>.</desc></xref> for information on how to set up a
   DITAVAL profile and how to change default behaviors.</p>
  <p class="- topic/p " xtrc="p:3;20:6" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">When deciding whether to include or exclude a particular element, a processor should evaluate
   each attribute independently:</p>
  <ol class="- topic/ol " xtrc="ol:1;22:7" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">
   <li class="- topic/li " xtrc="li:1;23:8" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">For each attribute:<ul class="- topic/ul " xtrc="ul:1;23:31" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">
<li class="- topic/li " xtrc="li:2;24:6" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">If the attribute is empty, or contains only empty groups, it is equivalent
to omitting the attribute from the element. If evaluated for the purposes of filtering, the
attribute is treated as "include", because an omitted attribute cannot evaluate to "exclude".</li>
     <li class="- topic/li " xtrc="li:3;27:10" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">If the attribute value does not contain any groups, then if any token in the attribute
      value evaluates to "include", the element evaluates to "include"; otherwise it evaluates to
      "exclude". In other words, the attribute evaluates to "exclude" only when <b class="+ topic/ph hi-d/b " xtrc="b:1;29:84" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">all</b> the
      values in that attribute evaluate to "exclude".</li>
     <li class="- topic/li " xtrc="li:4;31:11" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">If the attribute value does include groups, evaluate as
      follows, treating ungrouped tokens together as a group: <ol class="- topic/ol " xtrc="ol:2;32:67" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">
       <li class="- topic/li " xtrc="li:5;33:12" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">For each group (including the group of ungrouped tokens), if any token inside the group
        evaluates to "include", the group evaluates to "include"; otherwise it evaluates to
        "exclude". In other words, a group evaluates to "exclude" only when every token in that
        group evaluates to "exclude".</li>
       <li class="- topic/li " xtrc="li:6;37:12" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">If any group within an attribute evaluates to "exclude", that attribute evaluates to
        "exclude"; otherwise it evaluates to "include".</li>
      </ol></li>
    </ul></li>
   <li class="- topic/li " xtrc="li:7;41:8" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">If <b class="+ topic/ph hi-d/b " xtrc="b:2;41:14" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">any single attribute</b> evaluates to exclude, the element is excluded.</li>
  </ol>
  
  <p class="- topic/p " xtrc="p:4;44:6" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">For example, if a paragraph applies to three products and the publisher has chosen to exclude
   all of them, the processor should exclude the paragraph. This is true even if the paragraph
   applies to an audience or platform that is not excluded. But if the paragraph applies to an
   additional product that has not been excluded, then its content is still relevant for the
   intended output and should be preserved.</p>
  <p class="- topic/p " xtrc="p:5;49:7" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">Similarly, with groups, a step might apply to one application
   server and two database applications:
   <codeblock class="+ topic/pre pr-d/codeblock " id="groupcodesample" xml:space="preserve" xtrc="codeblock:1;51:36" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">&lt;steps&gt;
  &lt;step&gt;&lt;cmd&gt;Common step&lt;/cmd&gt;&lt;/step&gt;
  &lt;step product="appserver(mySERVER) database(ABC dbOtherName)"&gt;
    &lt;cmd&gt;Do something special for databases ABC or OtherName when installing on mySERVER&lt;/cmd&gt;
  &lt;/step&gt;
  &lt;!-- additional steps --&gt;
&lt;/steps&gt;</codeblock></p>
  <p class="- topic/p " xtrc="p:6;58:7" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">If a publisher decides to exclude the application server mySERVER,
   then the appserver() group evaluates to exclude. This can be done by setting
    <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:1;60:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">product="mySERVER"</codeph> to exclude <i class="+ topic/ph hi-d/i " xtrc="i:1;60:55" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">or</i> by setting
    <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:2;61:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">appserver="mySERVER"</codeph> to exclude. This means the step should be excluded,
   regardless of how the values "ABC" or "dbOtherName" evaluate. If a rule is specified for both
    <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:3;63:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">product="mySERVER"</codeph> and <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:4;63:53" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">appserver="mySERVER"</codeph>, the rule for the
   more specific group name "appserver" takes precedence.</p>
  <p class="- topic/p " xtrc="p:7;65:7" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">Similarly, if both "ABC" and "dbOtherName" evaluate to exclude,
   then the database() group evaluates to exclude and the element should be excluded regardless of
   how the "mySERVER" value is set.</p>
  <p class="- topic/p " xtrc="p:8;68:7" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">In more advanced usage, a DITAVAL can be used to specify a rule
   for a group name. For example, an author could create a DITAVAL rule that sets
    <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:5;70:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">product="database"</codeph> to "exclude". This is equivalent to setting a default of
   "exclude" for any individual value in a database() group; it also excludes the more common usage
   of "database" as a single value within the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;72:55" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">product</xmlatt> attribute. Thus when "myDB"
   appears in a database() group within the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;73:53" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">product</xmlatt> attribute, the full precedence
   for determining whether to include or exclude the value is as follows: <ol class="- topic/ol " xtrc="ol:3;74:79" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">
    <li class="- topic/li " xtrc="li:8;75:9" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">Check for a DITAVAL rule for <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:6;75:46" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">database="myDB"</codeph></li>
    <li class="- topic/li " xtrc="li:9;76:9" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">Check for a DITAVAL rule for <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:7;76:46" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">product="myDB"</codeph></li>
    <li class="- topic/li " xtrc="li:10;77:9" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">Check for a DITAVAL rule for <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:8;77:46" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">product="database"</codeph> (default for the database
     group)</li>
    <li class="- topic/li " xtrc="li:11;79:9" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">Check for a DITAVAL rule for "product" (default for the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:5;79:73" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">product</xmlatt>
     attribute)</li>
    <li class="- topic/li " xtrc="li:12;81:9" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">Check for a default rule for all conditions (default of include or exclude for all
     attributes)</li>
    <li class="- topic/li " xtrc="li:13;83:9" xtrf="file:/C:/Git/dita/specification/archSpec/base/filtering.dita">Otherwise, evaluate to "include"</li>
   </ol></p>
 </conbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:16;100:52" xtrf="file:/C:/Git/dita/specification/base-relationship-tables.ditamap"><link class="- topic/link " format="dita" href="../../langRef/attributes/metadataAttributes.dita" mapclass="- map/topicref " role="friend" scope="local" type="reference" xtrc="topicref:17;104:46" xtrf="file:/C:/Git/dita/specification/base-relationship-tables.ditamap"><?ditaot usertext?><linktext class="- topic/linktext ">8.8.8.1.2 <?ditaot gentext?>Metadata attribute group</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">The metadata attribute group includes common metadata attributes, several of which     support conditional processing (filtering and flagging) or the creation of new attribute domain     specializations.</desc></link><link class="- topic/link " format="dita" href="../../langRef/ditaval/ditaval-val.dita" mapclass="- map/topicref " role="friend" scope="local" type="reference" xtrc="topicref:18;105:89" xtrf="file:/C:/Git/dita/specification/base-relationship-tables.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot usertext?>DITAVAL markup with extended filtering example</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">The <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;6:28" xtrf="file:/C:/Git/dita/specification/langRef/ditaval/ditaval-val.dita">val</xmlelement> element is the root element of a DITAVAL       file.</desc></link></linkpool></related-links></concept>