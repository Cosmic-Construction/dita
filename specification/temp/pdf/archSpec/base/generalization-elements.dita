<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\dita\specification\temp\pdf\archSpec\base?><?workdir-uri file:/C:/Git/dita/specification/temp/pdf/archSpec/base/?><?path2project ..\..\?><?path2project-uri ../../?><?path2rootmap-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept) (topic abbrev-d) a(props deliveryTarget) (topic equation-d) (topic hazard-d) (topic hi-d) (topic indexing-d) (topic markup-d) (topic mathml-d) (topic pr-d) (topic relmgmt-d) (topic sw-d) (topic svg-d) (topic ui-d) (topic ut-d) (topic markup-d xml-d)" id="generalize" xml:lang="en-us" xtrc="concept:1;4:43" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">
  <title class="- topic/title " xtrc="title:1;5:10" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">Element generalization</title>
  <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;6:14" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">Elements are generalized by examining the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;6:64" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">class</xmlatt> attribute. When a
    generalization process detects that an element belongs to one of the modules that is being
    generalized, the element is renamed to a more general form.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;14:11" xtrf="file:/C:/Git/dita/specification/dita-2.0-specification.ditamap">OASIS DITA Technical Committee</author></prolog>
  <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;9:12" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">
    <p class="- topic/p " otherprops="examples" xtrc="p:1;10:30" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">For example, the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;10:59" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">step</xmlelement> element has a
        <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;11:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">class</xmlatt> attribute value of <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:1;11:59" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">"- topic/li task/step "</codeph>. If the
      task module is being generalized, the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;12:57" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">step</xmlelement> element is renamed to its
      more general form from the topic module: <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:3;13:60" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">li</xmlelement>.</p>
    <p class="- topic/p " xtrc="p:2;14:9" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">For specific concerns when generalizing structural types with
      dependencies on non-ancestor modules, see <xref class="- topic/xref " href="generalization-w-cross-specialization-dependencies.dita" xtrc="xref:1;16:73" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita" type="concept"><?ditaot gentext?>Generalization with cross-specialization dependencies<?ditaot genshortdesc?><desc class="- topic/desc ">Dependencies across specializations limit generalization targets to those that either   preserve the dependency or eliminate them. Some generalization targets will not be valid and   should be detected before generalization occurs.</desc></xref>.</p>
    <p class="- topic/p " xtrc="p:3;17:8" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">While the tag name of a given element is normally the same as the type name of the last token
      in the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;18:22" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">class</xmlatt> value, this is not required. <ph class="- topic/ph " otherprops="examples" xtrc="ph:1;18:92" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">For
        example, if a generalization process has already run on the element, the
          <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;20:19" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">class</xmlatt> attribute could contain tokens from two or more modules based on
        the original specialization. In that case, the element name could already match the first
        token or an intermediate token in the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:5;22:55" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">class</xmlatt> attribute. A second
        generalization process could end up renaming the element again or could leave it alone,
        depending on the target module or document type.</ph></p>
<section class="- topic/section " id="generalization-and-conref" xtrc="section:1;25:41" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">
<title class="- topic/title " xtrc="title:2;26:8" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">Generalization and conref</title>
<p class="- topic/p " xtrc="p:4;27:4" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">To determine compatibility between a document instance and a target document type when resolving
a conref reference, a generalization processor can use the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:6;28:68" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">domains</xmlatt> and
<xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:7;29:9" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">class</xmlatt> attributes for the document instance and the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:8;29:77" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">domains</xmlatt>
attribute for the target document type to determine how to rename elements in the resolved instance.
For each element type, a generalization processor:</p>
<ul class="- topic/ul " xtrc="ul:1;32:5" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">
<li class="- topic/li " xtrc="li:1;33:5" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">Iterates over the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:9;33:31" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">class</xmlatt> attribute from specific to general, inspecting the
vocabulary modules.</li>
<li class="- topic/li " xtrc="li:2;35:5" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-elements.dita">Identifies the first vocabulary module that is both present in each document type, with a
compatible set of constraints for that vocabulary module. If such a module is not found, the
instance can only be generalized to a less constrained document type.</li>
</ul>
</section>
  </conbody>
</concept>