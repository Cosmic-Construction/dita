<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\dita\specification\temp\pdf\archSpec\base?><?workdir-uri file:/C:/Git/dita/specification/temp/pdf/archSpec/base/?><?path2project ..\..\?><?path2project-uri ../../?><?path2rootmap-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept) (topic abbrev-d) a(props deliveryTarget) (topic equation-d) (topic hazard-d) (topic hi-d) (topic indexing-d) (topic markup-d) (topic mathml-d) (topic pr-d) (topic relmgmt-d) (topic sw-d) (topic svg-d) (topic ui-d) (topic ut-d) (topic markup-d xml-d)" id="dtdStructuralCoding" xml:lang="en-us" xtrc="concept:1;4:52" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
  <title class="- topic/title " xtrc="title:1;5:10" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">DTD: Coding requirements for structural modules</title>
  <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;6:14" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">A structural vocabulary module defines a new topic or map type as a specialization of a
    topic or map type.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;14:11" xtrf="file:/C:/Git/dita/specification/dita-2.0-specification.ditamap">OASIS DITA Technical Committee</author></prolog>
  <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;8:12" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
    <section class="- topic/section " id="architectural-attributes" xtrc="section:1;9:44" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
      <title class="- topic/title " xtrc="title:2;10:14" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">Required topic and map element attributes</title>
      <p class="- topic/p " xtrc="p:1;11:10" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">The topic or map element type must set the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;11:61" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">DITAArchVersion</xmlatt> attribute to
        the version of DITA in use, typically by referencing the <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:1;12:74" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">arch-atts</codeph>
        parameter entity. It must also set the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;13:56" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">domains</xmlatt> attribute to the
          <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:2;14:19" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">included-domains</codeph> entity. These attributes give processors a reliable way
        to check the architecture version and look up the list of domains available in the document
        type.</p>
      <p class="- topic/p " xtrc="p:2;17:10" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">The following example shows how these attributes are defined for the
          <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;18:23" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">concept</xmlelement> element in DITA 1.3:</p>
      <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:1;19:18" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">&lt;!ATTLIST concept    
  %concept.attributes;
  %arch-atts;
  domains  CDATA  "&amp;included-domains;"&gt;</codeblock>
    </section>
    <section class="- topic/section " id="topic-nesting" xtrc="section:2;24:34" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
      <title class="- topic/title " xtrc="title:3;25:14" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">Controlling nesting in topic types</title>
      <p class="- topic/p " xtrc="p:3;26:10" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">Specialized topics typically use a parameter entity to define what topic types are
        permitted to nest. While there are known exceptions described below, the following rules
        apply when using parameter entities to control nesting.</p>
      <dl class="- topic/dl " xtrc="dl:1;29:11" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
        <dlentry class="- topic/dlentry " xtrc="dlentry:1;30:18" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
          <dt class="- topic/dt " xtrc="dt:1;31:15" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">Parameter entity name</dt>
          <dd class="- topic/dd " xtrc="dd:1;32:15" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
            <p class="- topic/p " xtrc="p:4;33:16" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">The name of the parameter entity is the topic element name plus the
                <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:3;34:25" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">-info-types</codeph> suffix.</p>
            <p class="- topic/p " otherprops="examples" xtrc="p:5;35:38" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">For example, the name of the parameter
              entity for the concept topic is <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:4;36:55" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">concept-info-types</codeph>. </p>
          </dd>
        </dlentry>
        <dlentry class="- topic/dlentry " xtrc="dlentry:2;39:18" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
          <dt class="- topic/dt " xtrc="dt:2;40:15" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">Parameter entity value</dt>
          <dd class="- topic/dd " xtrc="dd:2;41:15" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
            <p class="- topic/p " xtrc="p:6;42:16" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">To set up default topic nesting rules, set the entity to the desired topic elements.
              The default topic nesting will be used when a document-type shell does not set up
              different rules. </p>
            <p class="- topic/p " otherprops="examples" xtrc="p:7;45:38" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">For example, the following parameter entity sets up default
              nesting so that <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;46:43" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">concept</xmlelement> will nest only other
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:3;47:29" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">concept</xmlelement> topics:</p>
            <codeblock class="+ topic/pre pr-d/codeblock " otherprops="examples" xml:space="preserve" xtrc="codeblock:2;48:46" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">&lt;!ENTITY % concept-info-types "%concept;"&gt;</codeblock>
            <p class="- topic/p " otherprops="examples" xtrc="p:8;49:38" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">As an additional example, the following parameter entity sets
              up a default that will not allow any nesting:</p>
            <codeblock class="+ topic/pre pr-d/codeblock " otherprops="examples" xml:space="preserve" xtrc="codeblock:3;51:46" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">&lt;!ENTITY % glossentry-info-types "no-topic-nesting"&gt;</codeblock>
            <p class="- topic/p " otherprops="examples" xtrc="p:9;52:38" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">Default topic nesting in a structural module often set up to
              use the <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:5;53:31" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">%info-types;</codeph> parameter entity rather than using a specific
              element. When this is done consistently, a shell that includes multiple structural
              modules can set common nesting rules for all topic types by setting
                <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:6;56:25" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">%info-types;</codeph> entity. The following example shows a structural
              module that uses <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:7;57:40" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">%info-types;</codeph> for default topic nesting:</p>
            <codeblock class="+ topic/pre pr-d/codeblock " otherprops="examples" xml:space="preserve" xtrc="codeblock:4;58:46" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">&lt;!ENTITY % concept-info-types "%info-types;"&gt;</codeblock>
          </dd>
        </dlentry>
        <dlentry class="- topic/dlentry " xtrc="dlentry:3;61:18" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
          <dt class="- topic/dt " xtrc="dt:3;62:15" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">Content model of the root element</dt>
          <dd class="- topic/dd " xtrc="dd:3;63:15" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
            <p class="- topic/p " xtrc="p:10;64:16" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">The last position in the content model defined for the root element of a topic type
                <term class="- topic/term " outputclass="RFC-2119" xtrc="term:1;65:46" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">SHOULD</term> be the
                  <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:8;66:27" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita"><varname class="+ topic/keyword sw-d/varname " xtrc="varname:1;66:36" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">topictype</varname>-info-types</codeph> parameter entity. A
              document-type shell then can control how topics are allowed to nest for this specific
              topic type by redefining the <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:9;68:52" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita"><varname class="+ topic/keyword sw-d/varname " xtrc="varname:2;68:61" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">topictype</varname>-info-types</codeph>
              entity for each topic type. If default nesting rules reference the
                <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:10;70:25" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">info-types</codeph> parameter entity, a shell can efficiently create common
              nesting rules by redefining the <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:11;71:55" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">info-types</codeph> entity.</p>
            <p class="- topic/p " otherprops="examples" xtrc="p:11;72:38" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">For example, with the following content
              model defined for <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:4;73:45" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">concept</xmlelement>, a document-type shell that uses
              the concept specialization can control which topics are nested in
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:5;75:29" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">concept</xmlelement> by redefining the
                <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:12;76:25" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">concept-info-types</codeph> parameter entity:</p>
            <codeblock class="+ topic/pre pr-d/codeblock " otherprops="examples" xml:space="preserve" xtrc="codeblock:5;77:46" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">&lt;!ENTITY % concept.content
  "((%title;), 
    (%titlealts;)?,
    (%abstract; | %shortdesc;)?, 
    (%prolog;)?, 
    (%conbody;)?, 
    (%related-links;)?,
    <b class="+ topic/ph hi-d/b " xtrc="b:1;84:8" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">(%concept-info-types;)*</b>)"
&gt;</codeblock>
          </dd>
        </dlentry>
      </dl>
      <p class="- topic/p " xtrc="p:12;89:10" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">In rare cases, it <ph class="- topic/ph " xtrc="ph:1;89:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">might not</ph> be desirable to control topic
        nesting with a parameter entity. For example:</p>
      <ul class="- topic/ul " xtrc="ul:1;91:11" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">
        <li class="- topic/li " xtrc="li:1;92:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">If a specialized topic type should never allow any nested topics, regardless of context,
          it can be defined without any entity or any nested topics.</li>
        <li class="- topic/li " xtrc="li:2;94:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/dtd-coding-structural-modules.dita">If a specialized topic type should only ever allow specific nesting patterns, such as
          allowing only other topic types that are defined in the same module, it can nest those
          topics directly in the same way that other nested elements are defined.</li>
      </ul>
    </section>
  </conbody>
</concept>