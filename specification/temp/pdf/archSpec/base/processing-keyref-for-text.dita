<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\dita\specification\temp\pdf\archSpec\base?><?workdir-uri file:/C:/Git/dita/specification/temp/pdf/archSpec/base/?><?path2project ..\..\?><?path2project-uri ../../?><?path2rootmap-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept) (topic abbrev-d) a(props deliveryTarget) (topic equation-d) (topic hazard-d) (topic hi-d) (topic indexing-d) (topic markup-d) (topic mathml-d) (topic pr-d) (topic relmgmt-d) (topic sw-d) (topic svg-d) (topic ui-d) (topic ut-d) (topic markup-d xml-d)" id="processing_key_references" xml:lang="en-us" xtrc="concept:1;3:58" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">
    <title class="- topic/title " xtrc="title:1;4:12" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">Processing key references to generate text or link text</title>
    <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;5:16" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">Key references can be used to pull text from the key definition. This topic explains
        how to generate text from a key definition, regardless of whether the key reference also
        results in a link.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;14:11" xtrf="file:/C:/Git/dita/specification/dita-2.0-specification.ditamap">OASIS DITA Technical Committee</author></prolog>
    <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;8:14" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">
        <note class="- topic/note " xtrc="note:1;9:15" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">The processing described in this topic is unrelated to the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;9:82" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">conkeyref</xmlatt>
            attribute. In that case <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;10:45" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">conkeyref</xmlatt> is used to determine the target of a
                <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;11:25" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">conref</xmlatt> attribute, after which the normal <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;11:83" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">conref</xmlatt>
            rules apply.</note>
        <p class="- topic/p " xtrc="p:1;13:12" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">Empty elements that include a key reference with a defined key might get their effective
            content from the key definition. Empty elements are defined as elements that meet the
            following criteria:</p>
        <ul class="- topic/ul " xtrc="ul:1;16:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">
            <li class="- topic/li " xtrc="li:1;17:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">Have no text content<ph class="- topic/ph " xtrc="ph:1;17:42" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">, including white space</ph></li>
            <li class="- topic/li " xtrc="li:2;18:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">Have no
                sub-elements</li>
            <li class="- topic/li " xtrc="li:3;20:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">Have no attributes that would be used as text content</li>
        </ul>
        <p class="- topic/p " xtrc="p:2;22:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">When an empty element as defined above references a key definition that
            has a child <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;23:37" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement> element, content from that
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;24:29" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement> element is used to determine the effective
            content of the referencing element. Effective content from the key definition becomes
            the element content, with the following exceptions: </p>
        <ul class="- topic/ul " xtrc="ul:2;27:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">
            <li class="- topic/li " xtrc="li:4;28:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">For empty <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:3;28:39" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">image</xmlelement> elements, effective content is used as
                alternate text, equivalent to creating an <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:4;29:71" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">alt</xmlelement> sub-element
                to hold that content.</li>
            <li class="- topic/li " xtrc="li:5;31:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">For empty <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:5;31:39" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">link</xmlelement> elements, effective content is used as link
                text, equivalent to creating a <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:6;32:60" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> sub-element to hold
                that content.</li>
            <li class="- topic/li " xtrc="li:6;34:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">For empty <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:7;34:39" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">link</xmlelement> and <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:8;34:73" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">xref</xmlelement> elements,
                a key definition can be used to provide a short description in addition to the
                normal effective content. If the key definition includes
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:9;37:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">shortdesc</xmlelement> inside of <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:10;37:78" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement>,
                that <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:11;38:34" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">shortdesc</xmlelement> should be used to provide effective content
                for a <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:12;39:35" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">desc</xmlelement>
                sub-element.</li>
            <li class="- topic/li " xtrc="li:7;41:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">The <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:13;41:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">longdescref</xmlelement> and <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:14;41:74" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">longquoteref</xmlelement>
                elements are empty elements with no effective content. Key definitions are not used
                to set effective text for these elements.</li>
            <li class="- topic/li " xtrc="li:8;44:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">The <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:15;44:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">param</xmlelement> element does not have any effective content, <ph class="- topic/ph " xtrc="ph:2;45:22" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">so key definitions do not result in any effective content
                    for <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:16;46:37" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">param</xmlelement> elements.</ph></li>
            <li class="- topic/li " xtrc="li:9;47:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">The <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:17;47:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">indextermref</xmlelement> element is not completely defined, so
                determining effective content for this element is also left undefined.</li>
        </ul>
        <p class="- topic/p " xtrc="p:3;50:12" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">Effective text content is determined using the following set of rules:</p>
        <ol class="- topic/ol " xtrc="ol:1;51:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">
            <li class="- topic/li " xtrc="li:10;52:18" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">For elements that also exist as a child of
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:18;53:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement> in the key definition, effective content is
                taken from the first matching direct child of <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:19;54:75" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement>.
                For example, given the following key definition, an empty
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:20;56:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">author</xmlelement> element with the attribute
                    <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:1;57:29" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keyref="justMe"</codeph> would result in the matching content "Just M.
                Name":<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:1;58:34" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">&lt;keydef keys="justMe" href="http://www.example.com/my-profile" format="html" scope="external"&gt;
  &lt;topicmeta&gt;
    &lt;author&gt;Just M. Name&lt;/author&gt;
  &lt;/topicmeta&gt;
&lt;/keydef&gt;</codeblock></li>
            <li class="- topic/li " xtrc="li:11;63:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">For elements that do not allow the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:5;63:60" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">href</xmlatt> attribute, content is taken
                from the first <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:21;64:44" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement> element inside of
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:22;65:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keywords</xmlelement> inside of the
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:23;66:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement>. For example, given the following key
                definition, empty <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:24;67:47" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement>, <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:25;67:81" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">term</xmlelement>,
                and <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:26;68:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">dt</xmlelement> elements with the attribute
                    <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:2;69:29" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keyref="nohref"</codeph> would all result in the matching content
                "first":<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:2;70:36" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">&lt;keydef keys="nohref"&gt;
  &lt;topicmeta&gt;
    &lt;keywords&gt;&lt;keyword&gt;first&lt;/keyword&gt;&lt;keyword&gt;second&lt;/keyword&gt;&lt;keyword&gt;third&lt;/keyword&gt;&lt;/keywords&gt;
  &lt;/topicmeta&gt;
&lt;/keydef&gt;</codeblock></li>
            <li class="- topic/li " xtrc="li:12;75:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">For elements that do allow <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:6;75:52" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">href</xmlatt>, elements from within
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:27;76:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement> that are legal within the element using
                    <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:7;77:29" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keyref</xmlatt> are considered matching text. For example, the
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:28;78:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">xref</xmlelement> element allows <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:8;78:74" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">href</xmlatt>, and also
                allows <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:29;79:36" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement> as a child. Using the code sample from the
                previous item, an empty <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:30;80:53" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">xref</xmlelement> with <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:3;81:22" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keyref="nohref"</codeph> would use all three of these
                elements as text content; after processing, the result would be equivalent
                to:<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:3;83:31" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">&lt;xref keyref="test"&gt;&lt;keyword&gt;first&lt;/keyword&gt;&lt;keyword&gt;second&lt;/keyword&gt;&lt;keyword&gt;third&lt;/keyword&gt;&lt;/xref&gt;</codeblock></li>
            <li class="- topic/li " xtrc="li:13;84:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">Otherwise, if <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:31;84:43" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> is specified inside of
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:32;85:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement>, the contents of
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:33;86:33" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> are used as the effective content. <note class="- topic/note " xtrc="note:2;87:22" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">Because all elements that <ph class="- topic/ph " xtrc="ph:3;87:53" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">get effective
                        content</ph> will eventually look for content in the
                        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:34;89:37" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> element, using
                        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:35;90:37" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> for effective content is a best practice
                    for cases where all elements getting text from a key definition should result in
                    the same value.</note></li>
            <li class="- topic/li " xtrc="li:14;93:17" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">Otherwise, if the element with the key reference results in a link, normal link text
                determination rules apply as they would for <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:36;94:73" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">xref</xmlelement> (for
                example, using the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:37;95:48" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">navtitle</xmlelement> or falling back to the URI of
                the link target).</li>
        </ol>
        <p class="- topic/p " xtrc="p:4;98:12" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">When the effective content for a key reference element results in <ph class="- topic/ph " xtrc="ph:4;98:82" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">invalid elements,
                those elements <term class="- topic/term " outputclass="RFC-2119" xtrc="term:1;99:61" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">SHOULD</term> be generalized to produce
                a valid result.</ph> For example, <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:38;100:63" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> in the key
            definition <ph class="- topic/ph " xtrc="ph:5;101:29" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">might</ph> use a domain specialization of
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:39;102:29" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement> that is not valid in the key reference context, in
            which case the specialized element should be generalized to
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:40;104:29" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement>. If the generalized content is also not valid, a
            text equivalent should be used instead. For example, <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:41;105:78" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement>
            <ph class="- topic/ph " xtrc="ph:6;106:18" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">might</ph> include <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:42;106:49" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">ph</xmlelement> or a
            specialized <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:43;107:37" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">ph</xmlelement> in the key definition, but neither of those are
            valid as the effective content for a <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:44;108:62" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement>. In that case, the
            text content of the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:45;109:45" xtrf="file:/C:/Git/dita/specification/archSpec/base/processing-keyref-for-text.dita">ph</xmlelement> should be used.</p>
        
    </conbody>
</concept>