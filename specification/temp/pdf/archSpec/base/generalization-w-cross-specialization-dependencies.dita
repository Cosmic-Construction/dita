<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\dita\specification\temp\pdf\archSpec\base?><?workdir-uri file:/C:/Git/dita/specification/temp/pdf/archSpec/base/?><?path2project ..\..\?><?path2project-uri ../../?><?path2rootmap-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept) (topic abbrev-d) a(props deliveryTarget) (topic equation-d) (topic hazard-d) (topic hi-d) (topic indexing-d) (topic markup-d) (topic mathml-d) (topic pr-d) (topic relmgmt-d) (topic sw-d) (topic svg-d) (topic ui-d) (topic ut-d) (topic markup-d xml-d)" id="generalization-w-cross-specialization-dependencies" xml:lang="en-us" xtrc="concept:1;3:84" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">
 <title class="- topic/title " xtrc="title:1;4:9" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">Generalization with cross-specialization dependencies</title>
 <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;5:13" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">Dependencies across specializations limit generalization targets to those that either
  preserve the dependency or eliminate them. Some generalization targets will not be valid and
  should be detected before generalization occurs.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;14:11" xtrf="file:/C:/Git/dita/specification/dita-2.0-specification.ditamap">OASIS DITA Technical Committee</author></prolog>
 <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;8:11" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">
  <p class="- topic/p " xtrc="p:1;9:6" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">When a structural specialization has a dependency on a domain specialization, then the domain
   cannot be generalized without also generalizing the reusing structural specialization.</p>
  <p class="- topic/p " xtrc="p:2;11:7" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">For example, a structural specialization codeConcept might incorporate and
   require the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;12:28" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">codeblock</xmlelement> element from the programming domain. A
   generalization process that turns programming domain elements back into topic elements would
   convert <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;14:24" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">codeblock</xmlelement> to <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:3;14:62" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">pre</xmlelement>, making a document
   that uses codeConcept invalid. However, codeConcept could be generalized to concept or topic,
   without generalizing programming domain elements, as long as the target document type includes
   the programming domain.</p>
  <p class="- topic/p " xtrc="p:3;18:6" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">When a structural specialization has a dependency on another structural specialization, then
   both must be generalized together to a common ancestor. </p>
  <p class="- topic/p " xtrc="p:4;20:6" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">For example, if the task elements in checklist were generalized without also generalizing
   checklist elements, then the checklist content models that referenced task elements would be
   broken. And if the checklist elements were generalized to topic without also generalizing the
   task elements, then the task elements would be out of place, since they cannot be validly present
   in topic. However, checklist and task can be generalized together to any ancestor they have in
   common: in this case topic. </p>
  <p class="- topic/p " xtrc="p:5;26:6" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">When possible, generalizing processes <term class="- topic/term " outputclass="RFC-2119" xtrc="term:1;27:6" xtrf="file:/C:/Git/dita/specification/archSpec/base/generalization-w-cross-specialization-dependencies.dita">SHOULD</term> detect invalid generalization target combinations and report them as errors.</p>
 </conbody>
</concept>