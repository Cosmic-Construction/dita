<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="file-naming-conventions"  xml:lang="en-us">
 <title>File naming conventions</title>
 <shortdesc>The OASIS DITA Technical Committee uses certain conventions for
    the names of XML grammar files. We suggest using these conventions as a
    way to facilitate the interchange of grammar files.</shortdesc>
 <conbody>
    <draft-comment author="Kristen J Eberlein" time="19 September 2022">
      <p>This topic contains a mixture of content, which makes it difficult
        to figure out where to place it:</p>
      <ul>
        <li>General advice about file names, which might be best placed in
          "Coding practices"</li>
        <li>Specific information about conventions used by DITA TC, which
          are reflected in the names of the DITA grammar files. This
          content perhaps should be grouped with the other topics about the
          "OASIS grammar files".</li>
      </ul>
    </draft-comment>
    <dl>
      <dlentry>
        <dt>Globally unique identifiers</dt>
        <dd>
          <p>Vocabulary modules that are intended for use outside of a
            narrowly-restricted context should have one or more associated,
            globally-unique names by which the modules can be referenced
            without regard to their local storage location. The
            globally-unique names can be public identifiers, URNs, or
            absolute URLs.</p>
        </dd>
      </dlentry>
      <dlentry>
        <dt><ph rev="review-p">Document-type</ph> shells</dt>
        <dd>
          <p><ph rev="review-p">Document-type</ph> shells should be given a
            name that distinguishes their name, owner, or purpose, for
            example, <filepath>acme-concept.dtd</filepath>. The <ph
              rev="review-k">document-type</ph> shells that are provided by
            the DITA Technical Committee typically use the root element of
            the primary specialization as the basis for the file name. If
            necessary, a qualifier such as <keyword>base</keyword> is
            prepended to the name of the root element.</p>
        </dd>
      </dlentry>
      <dlentry>
        <dt>Module names</dt>
        <dd>
          <p>For structural modules, the module name should be the element
            type name of the top-level topic or map type that is defined by
            the module, such as "topic" or "map".</p>
          <p>For element- or attribute-domain modules, the module name
            should be a name that reflects the subject domain to which the
            domain applies, such as "highlight" or "software". Domain
            module names should be sufficiently unique that they are
            unlikely to conflict with any other domains.</p>
          <p>In addition, each element- or attribute-domain module has a
            short name that is used to construct entity names that are used
            in associated declarations. Modules can also have abbreviated
            names that further shorten the short name, for example "hi-d"
            for the "highlight" domain, where "highlight" is the short name
            and "hi-d" is the abbreviated name. </p>
        </dd>
      </dlentry>
    </dl>
  <section id="dtd-specialization-modules">
   <title>DTD-based specialization modules</title>
   <p>The DITA Technical Committee uses certain file-naming conventions for
        DTD-based specialization modules. While the grammar files shipped
        with DITA 2.0 do not include domain constraint or expansion
        modules, we suggest conventions for those modules also.</p>
   <simpletable frame="all" relcolwidth=".75* 1.50* 2.0*">
        <sthead>
          <stentry>Module type</stentry>
          <stentry>File name </stentry>
          <stentry>Example</stentry>
        </sthead>
        <strow>
          <stentry>Structural</stentry>
          <stentry><filepath><varname>moduleName</varname>.mod</filepath></stentry>
          <stentry><filepath>topic.mod</filepath></stentry>
        </strow>
        <strow>
          <stentry>Element domain</stentry>
          <stentry><filepath><varname>domainName</varname>Domain.<varname>ext</varname></filepath></stentry>
          <stentry>
            <sl>
              <sli><filepath>highlightDomain.ent</filepath></sli>
              <sli><filepath>highlightDomain.mod</filepath></sli>
            </sl>
          </stentry>
        </strow>
        <strow>
          <stentry>Attribute domain</stentry>
          <stentry><filepath><varname>attriName</varname>AttDomain.ent</filepath></stentry>
          <stentry><filepath>deliveryTargetAttDomain.ent</filepath>
          </stentry>
        </strow>
        <strow>
          <stentry>Constraint</stentry>
          <stentry><filepath><varname>qualifier</varname><varname>Target</varname>Constraint.mod</filepath></stentry>
          <stentry>
            <sl>
              <sli><filepath>strictTaskbodyConstraint.mod</filepath></sli>
              <sli><filepath>acmeHighlightDomainConstraint.mod</filepath></sli>
            </sl>
          </stentry>
        </strow>
        <strow rev="2.0">
          <stentry>Expansion</stentry>
          <stentry/>
          <stentry>
            <sl>
              <sli><filepath>acme-SectionExpansion.mod</filepath></sli>
              <sli><filepath>acme-CellPurposeAttExpansion.ent</filepath></sli>
              <sli><filepath>acme-otherpropsAttExpansion.mod</filepath></sli>
              <sli><filepath>example-dlentryModeAttExpansion.ent</filepath></sli>
            </sl>
          </stentry>
        </strow>
      </simpletable>
      <draft-comment author="Kristen J Eberlein" time="19 September 2022">
        <p>The names of the expansion modules listed in the "Example"
          column are taken from the example topics. They do not follow a
          consistent pattern. I suspect that the same is true for file
          names used in the constraint example topics.</p>
      </draft-comment>
   <p>where:</p>
   <ul>
        <li><varname>moduleName</varname> is the name of the element type,
          such as "topic" or "map".</li>
    <li><varname>domainName</varname> is the short name of the domain, for
          example, "highlight" or "utilities".</li>
    <li><varname>attrName</varname> is the name of the specialized
          attribute, for example, "deliveryTarget".</li>
        <li><varname>ext</varname> is the file extension, for example,
          "ent" or "mod".</li>
        <li conref="../common/conref-file.dita#reuse_file/qualifier-li"
          conrefend="../common/conref-file.dita#reuse_file/Tagname-li"/>
   </ul>
  </section>
  <section id="relax-ng-modules">
   <title>RELAX NG-based specialization modules</title>
      <p>The DITA Technical Committee uses certain file-naming conventions
        for RNG-based specialization modules. While the grammar files
        shipped with DITA 2.0 do not include domain constraint or expansion
        modules, we suggest conventions for those modules also.</p>
   <simpletable frame="all" relcolwidth=".75* 1.50* 2.0*">
        <sthead>
          <stentry>Module type</stentry>
          <stentry>File name</stentry>
          <stentry>Example</stentry>
        </sthead>
        <strow>
          <stentry>Structural</stentry>
          <stentry><filepath><varname>moduleName</varname>Mod.<varname>rng</varname></filepath></stentry>
          <stentry><filepath>conceptMod.rng</filepath></stentry>
        </strow>
        <strow>
          <stentry>Element domain</stentry>
          <stentry><filepath><varname>domainName</varname>DomainMod.rng</filepath></stentry>
          <stentry><filepath>highlightDomainMod.rng</filepath>
          </stentry>
        </strow>
        <strow>
          <stentry>Attribute domain</stentry>
          <stentry><filepath><varname>attrName</varname>AttDomain.rng</filepath></stentry>
          <stentry><filepath>deliveryTargetAttDomain.rng</filepath></stentry>
        </strow>
        <strow>
          <stentry>Constraint</stentry>
          <stentry><filepath><varname>qualifier</varname><varname>Target</varname>ConstraintMod.rng</filepath></stentry>
          <stentry>
            <sl>
              <sli><filepath>strictTaskbodyConstraintMod.rng</filepath></sli>
              <sli><filepath>acmeHighlightDomainConstraintMod.mod</filepath></sli>
            </sl>
          </stentry>
        </strow>
        <strow rev="2.0">
          <stentry>Expansion</stentry>
          <stentry/>
          <stentry>
            <sl>
              <sli><filepath>sectionExpansionMod.rng</filepath></sli>
              <sli><filepath>cellPurposeAtt.rng</filepath></sli>
              <sli><filepath>acme-otherpropsAttExpansion.rng</filepath></sli>
              <sli><filepath>tableCellAttExpansion.rng</filepath></sli>
            </sl>
          </stentry>
        </strow>
      </simpletable>
      <draft-comment author="Kristen J Eberlein" time="19 September 2022">
        <p>The names of the expansion modules listed in the "Example"
          column are taken from the example topics. They do not follow a
          consistent pattern. I suspect that the same is true for file
          names used in the constraint example topics.</p>
        <p>Also, is including "Mod" in element-domain or constraint files
          something we really want to do, or was it necessary for the
          RNG-to-DITA/XSD converter?</p>
      </draft-comment>
   <p>where:</p>
      <ul>
        <li><varname>moduleName</varname> is the name of the element type,
          such as "topic" or "map".</li>
        <li><varname>domainName</varname> is the short name of the domain,
          for example, "highlight" or "utilities".</li>
        <li><varname>attrName</varname> is the name of the specialized
          attribute, for example, "deliveryTarget".</li>
        <li conref="../common/conref-file.dita#reuse_file/qualifier-li"
          conrefend="../common/conref-file.dita#reuse_file/Tagname-li"/>
      </ul>
  </section>
 </conbody>
</concept>
