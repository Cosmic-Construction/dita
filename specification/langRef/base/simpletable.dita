<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="simpletable" xml:lang="en-us">
<title><xmlelement>simpletable</xmlelement></title>
  <abstract>
    <shortdesc conkeyref="library-short-descriptions/simpletable"/>
    <draft-comment author="Kristen J Eberlein">
      <p>Tom: What does regular in structure mean? No spanning </p>
      <p>Simple tables are tables that do not allow row and column spanning. They are suitable for
        displaying content that ...</p>
    </draft-comment>
  </abstract>
<prolog><metadata>
<keywords><indexterm>simple tables</indexterm><indexterm>table elements<indexterm>simpletable</indexterm></indexterm>
    <indexterm>tables<indexterm>simple</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
  <section id="usage-information">
   <title>Usage information</title>
   <p>Choose the <xmlelement>simpletable</xmlelement> element when you want to show information in
    regular rows and columns. For example, multi-column tabular data such as phone directory
    listings or parts lists are good candidates for <xmlelement>simpletable</xmlelement>. Another
    good use of <xmlelement>simpletable</xmlelement> is for information that seems to beg for a
    three-part definition list; the <xmlatt>keycol</xmlatt> attribute can be used to indicate which
    column represents the "key" or term-like column of the structure.</p>
   <p>The <xmlatt>keycol</xmlatt> attribute indicates which column represents the "key" or term-like
    column of the structure.</p>
   <p>The close match of <xmlelement>simpletable</xmlelement> to tabular, regular data makes
     <xmlelement>simpletable</xmlelement> suitable as the basis for specialized structures such as
     <xmlelement>properties</xmlelement> (for programming information) and choice tables (for
    tasks).</p>
  </section>
  <section id="attributes">
   <title>Attributes</title>
   <p conref="../../common/conref-attribute.dita#conref-attribute/simpletable-attributes"/>
  </section>
<example id="example" otherprops="examples"><title>Example</title><p>The following code shows a simple table used to represent a truth table from Boolean logic:</p>
      <codeblock>&lt;simpletable&gt;
  &lt;sthead&gt;
    &lt;stentry&gt;P&lt;/stentry&gt;
    &lt;stentry&gt;not P&lt;/stentry&gt;
  &lt;/sthead&gt;
  &lt;strow&gt;
    &lt;stentry&gt;true&lt;/stentry&gt;
    &lt;stentry&gt;false&lt;/stentry&gt;
  &lt;/strow&gt;
  &lt;strow&gt;
    &lt;stentry&gt;false&lt;/stentry&gt;
    &lt;stentry&gt;true&lt;/stentry&gt;
  &lt;/strow&gt;
&lt;/simpletable&gt;</codeblock></example>
<example id="example2" otherprops="examples"><title>Example using
<xmlatt>keycol</xmlatt></title><p>In this sample, the first column is identified as a header column through the use of
<codeph>keycol="1"</codeph> on the <xmlelement>simpletable</xmlelement> element. This indicates that
items in the first column should be treated as headers for the row that follows. Rendering of the
header column is left up to the implementation.</p>
      <codeblock>&lt;simpletable keycol="1"&gt;
 &lt;sthead&gt;
  &lt;stentry&gt;Term&lt;/stentry&gt;
  &lt;stentry&gt;Categorization&lt;/stentry&gt;
  &lt;stentry&gt;Definition&lt;/stentry&gt;
 &lt;/sthead&gt;
 &lt;strow&gt;
  &lt;stentry&gt;Widget&lt;/stentry&gt;
  &lt;stentry&gt;noun&lt;/stentry&gt;
  &lt;stentry&gt;Thing that is used for something&lt;/stentry&gt;
 &lt;/strow&gt;
 &lt;strow&gt;
  &lt;stentry&gt;Frustration&lt;/stentry&gt;
  &lt;stentry&gt;noun&lt;/stentry&gt;
  &lt;stentry&gt;What you feel when you drop the widget&lt;/stentry&gt;
 &lt;/strow&gt;
&lt;/simpletable&gt;</codeblock></example>
</refbody>
</reference>
