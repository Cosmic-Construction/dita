<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="audio">
  <title><xmlelement>audio</xmlelement></title>
  <shortdesc conkeyref="reuse-audio/shortdesc"/>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>audio</indexterm>
        <indexterm>multimedia domain<indexterm>audio </indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section conkeyref="reuse-audio/usage-information"><title/><p/></section>
    <section conkeyref="reuse-audio/rendering-expectations"><title/><p/></section>
    <section conkeyref="reuse-audio/processing-expectations"><title/><p/></section>
    <section id="specialization-hierarchy">
      <title>Specialization hierarchy</title>
      <p>The <xmlelement>audio</xmlelement> element is specialized from
          <xmlelement>object</xmlelement>. It is defined in the multimedia-domain module.</p>
    </section>
    <section id="attributes">
      <title>Attributes</title>
      <p>The following attributes are available on this element: <xref keyref="attributes-universal"
        /> and the attributes defined below.</p>
      <dl>
        <dlentry>
          <dt><xmlatt>data</xmlatt></dt>
          <!--KJE: RDA and I discussed this on 29 April 2019. We could not come up with a phrasing that would not include "should". Adding this comment so that we don't have the discussion again.-->
          <dd>Specifies the absolute or relative URI of the audio object. If this attribute is
            specified, <xmlatt>type</xmlatt> also should be specified.</dd>
        </dlentry>
        <dlentry>
          <dt><xmlatt>datakeyref</xmlatt></dt>
          <dd>Provides a key reference to the audio object. When specified and the key is
            resolvable, the key-provided URI is used. A key that has no associated resource, only
            link text, is considered to be unresolved. If <xmlatt>data</xmlatt> is specified, it is
            used as a fallback when the key cannot be resolved to a resource.</dd>
          <dd>
            <draft-comment author="Chris Nitchie" disposition="NEW"
              time="Fri May 03 14:31:29 UTC 2019">
              <p>I'm uncomfortable with saying that a key with no href equates to an "unresolved key
                reference" for audio content. That's not the case for other key references. The key
                resolved just fine, it just doesn't go anywhere.</p>
              <p>Instead let's describe the behavior when a key resolves to a null resource. I see a
                couple of options:</p>
              <ol>
                <li>Fall back to @data. I think this is wrong because the key resolved, and when the
                  key resolves, you don't use the fallback.</li>
                <li>"Turn off" the media element, removing it.</li>
                <li>Replace the media element with any text associated with the key.</li>
              </ol>
              <p>I think 3 is probably the best solution, as it conforms to expected behavior for
                other key referencing elements, but could also live with 2.</p>
              <data name="portalName" value="DITA 2.0 Specification (DRAFT)"/>
              <data name="contextName" value="dita-2.0-specification.ditamap"/>
            </draft-comment>
            <draft-comment author="Kristen J Eberlein" time="17 May 2019">
              <p>This makes sense to me. Robert?</p>
              <p>So, as far as the wordsmithing goes … I see a couple of options, if we are keeping
                only of this content here in the description of the attribute.</p>
              <ol>
                <li>Replace the current description of <xmlatt>datakeyref</xmlatt> with the
                  following text: <q>Provides a key reference to the audio object. When specified
                    and the key is resolvable, the key-provided URI is used. <i>If a key that has no
                      associated resource, only link text, the audio object is replaced with the
                      link text.</i> If <xmlatt>data</xmlatt> is specified, it is used as a fallback
                    when the key cannot be resolved to a resource.</q> (Changes in italic.)</li>
                <li>Replace the current description of <xmlatt>datakeyref</xmlatt> with the
                  following text: <q>Provides a key reference to the audio object. When specified
                    and the key is resolvable, the key-provided URI is used.  <i>If the key
                      referenced by <xmlatt>datakeyref</xmlatt> cannot be resolved, and
                        <xmlatt>data</xmlatt> is specified, that value provided by
                        <xmlatt>data</xmlatt> is used as a fallback. If the key referenced by
                        <xmlatt>datakeyref</xmlatt> has no associated ressource, only link text, the
                      audio object is replaced with the link text.</i>
                  </q> (Changes in italic.)</li>
              </ol>
              <p>But … Should some of this be in the "Rendering expectations" section? And should
                any of this use normative statements? The "Rendering expectations" section DOES
                include a statement currently.</p>
            </draft-comment>
          </dd>
        </dlentry>
        <dlentry>
          <dt><xmlatt>type</xmlatt></dt>
          <dd>Indicates the MIME type for the audio object. Setting this attribute enables
            processors to avoid loading unsuppported objects. Note that this differs from the
              <xmlatt>type</xmlatt> attribute on many other DITA elements; it specifies a MIME type
            rather than a content type. If <xmlatt>type</xmlatt> is not specified, the effective
            type value for the key named by the <xmlatt>datakeyref</xmlatt> attribute is used as the
            value for this attribute.</dd>
          <dd>
            <draft-comment author="Chris Nitchie" disposition="NEW"
              time="Fri May 03 14:33:55 UTC 2019">
              <p>Processors or user agents have the option to (normative MAY?) use other means, such
                as the URI's file extension, to determine the effective content type of the media
                object absent an explicit @type on the media object or key definition.</p>
              <data name="portalName" value="DITA 2.0 Specification (DRAFT)"/>
              <data name="contextName" value="dita-2.0-specification.ditamap"/>
            </draft-comment>
            <draft-comment author="Kristen J Eberlein" time="17 May 2019">
              <p>I want to suggest the following, if we are not going to make a normative
                statement.</p>
              <p>Indicates the MIME type for the audio object. This attribute enables processors to
                avoid loading unsuppported objects. <line-through>Note that this differs from the
                    <xmlatt>type</xmlatt> attribute on many other DITA elements; it specifies a MIME
                  type rather than a content type. </line-through>If <xmlatt>type</xmlatt> is not
                specified, the effective type for the key named by the <xmlatt>datakeyref</xmlatt>
                attribute is used as the value<line-through> as the value for this
                  attribute</line-through>. If an explicit <xmlatt>type</xmlatt> is not specified on
                either the audio object or key definition, processors can use other means, such the
                URI file extension, to determine the effective MIME type of the media object.</p>
              <p>If we want to make a normative statement, maybe add the following to the
                "Processing expectations" section? <q>If an explicit <xmlatt>type</xmlatt> is not
                  specified on either the audio object or key definition, processors <term
                    outputclass="RFC-2119">MAY</term> use other means, such the URI file extension,
                  to determine the effective type of the media object.</q></p>
              <p>Or would perhaps a fuller statement about how processors should determine the MIME
                type be useful in the "Processing expectations" section? If so … (This would appear
                in both the <xmlelement>audio</xmlelement> and <xmlelement>video</xmlelement>
                topic.)</p>
              <p>Processors <term outputclass="RFC-2119">SHOULD</term> determine the effective MIME
                type of the media object as follows:<ol>
                  <li>Use the explicit value provided by the <xmlatt>type</xmlatt> attribute on the
                    media object.</li>
                  <li>Use the implicit value provided by resource associated with the key named by
                    the <xmlatt>datakeyref</xmlatt> attribute.</li>
                </ol></p>
              <p>If a MIME type is not specified on either the media object or key definition,
                processors <term outputclass="RFC-2119">MAY</term> use other means, such the URI
                file extension, to determine the effective MIME type of the media object.</p>
            </draft-comment>
          </dd>
        </dlentry>
        <dlentry>
          <dt><xmlatt>tabindex</xmlatt></dt>
          <dd>Positions the audio object in tabbing order.</dd>
          <dd>
            <draft-comment author="Kristen J Eberlein" time="28 April 2019">
              <p>Would this be a better description? "Indicates whether the audio object can be
                focused and where it participates in sequential keyboard navigation."</p>
            </draft-comment>
          </dd>
        </dlentry>
      </dl>
    </section>
    <example otherprops="examples">
      <title>Examples</title>
      <fig>

<title>A simple audio object</title>
<p>In the following code sample, an audio object is referenced using direct addressing. The
<xmlatt>type</xmlatt> attribute specifies the MIME type of the object.
</p><codeblock>&lt;audio data="message.mp3" type="audio/mp3"/> </codeblock><p>The audio object also
could be addressed using a key reference; in this version, both the URI and the MIME type come from
the key definition:</p><codeblock>&lt;audio datakeyref="message"/></codeblock>
</fig>
      <fig>
<title>An audio object with multiple formats</title>
<p>In the following code sample, <xmlelement>media-source</xmlelement> elements are used to specify
the different audio formats that are
available.</p><codeblock>&lt;audio>
  &lt;media-source value="message.mp3" type="audio/mp3"/>
  &lt;media-source value="message.wav" type="audio/wav"/>
&lt;/audio></codeblock>
</fig>
      <fig>

<title>Complex example of an audio object</title>
<p>The following code sample specifies an audio object and defines multiple presentational details;
          it also provides fallback behavior for when the audio cannot be rendered.</p><codeblock>&lt;audio>
  &lt;desc>A sound file narrating the execution of this procedure.&lt;/desc>
  &lt;fallback>The audio track walking through this procedure is not available.&lt;/fallback>
  
  &lt;!--
    When the following elements are used, they have a default value of "true";
    setting value="true" and not specifying @value have the same effect.
    To disable any of these settings, specify value="false". --&gt;

  &lt;media-controls value="true"/>
  &lt;media-autoplay/>
  &lt;media-loop value="false"/>
  &lt;media-muted value="false"/>


  &lt;!-- Multiple formats, with URI and MIME type referenced using a key -->
  &lt;media-source keyref="walkthrough-mp3"/>
  &lt;media-source keyref="walkthrough-wav"/>

&lt;/audio></codeblock>
</fig>
    </example>
  </refbody>
</reference>
