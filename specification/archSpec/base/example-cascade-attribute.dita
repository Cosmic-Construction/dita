<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="cascadeattribute">
  <title>Example: How <xmlatt>cascade</xmlatt> affects attribute cascading</title>
  <shortdesc>In this scenario, the <xmlatt>cascade</xmlatt> attribute is used to modify how metadata
    attributes cascade within a map.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>cascading metadata<indexterm>example<indexterm>cascade
            attribute</indexterm></indexterm></indexterm>
        <indexterm>examples<indexterm><indexterm>cascading metadata<indexterm>cascade
                attribute</indexterm></indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <fig id="fig_z5z_mg5_nsb">
      <title>Example of <codeph>cascade="merge"</codeph></title>
      <p>Consider the following code
        example:<codeblock id="codeblock_ptk_mg5_nsb">&lt;map audience="a b" cascade="merge">
     &lt;topicref href="topic.dita" audience="c"/>
&lt;/map>
</codeblock></p>
      <p>In this map, the <codeph>cascade="merge"</codeph> attribute instructs a processor to merge
        attribute values while cascading. With <xmlatt>audience</xmlatt> specified on both the
          <xmlelement>map</xmlelement> element and the <xmlelement>topicref</xmlelement> element,
        the effective <xmlatt>audience</xmlatt> attribute value for the reference to
          <filepath>topic.dita</filepath> is <keyword>a b c</keyword>.</p>
    </fig>
    <fig id="fig_vjm_yg5_nsb">
      <title>Example of <codeph>cascade="nomerge"</codeph></title>
      <p>Consider the following code
        example:<codeblock id="codeblock_qtk_mg5_nsb">&lt;map audience="a b" cascade="nomerge">
     &lt;topicref href="topic.dita" audience="c"/>
&lt;/map>
</codeblock></p>
      <p>In this map, the <codeph>cascade="nomerge"</codeph> attribute instructs a processor
          <i>not</i> to merge attribute values while cascading. With <xmlatt>audience</xmlatt>
        specified on both the <xmlelement>map</xmlelement> element and the
          <xmlelement>topicref</xmlelement> element, the effective <xmlatt>audience</xmlatt>
        attribute value on the reference to <filepath>topic.dita</filepath> is not merged with the
        value from the map and remains <keyword>c</keyword>.</p>
    </fig>
    <fig id="fig_wl4_3h5_nsb">
      <title>Example: changing the <xmlatt>cascade</xmlatt> value within the map</title>
      <p>Consider the following code
        example:<codeblock id="codeblock_rcw_lh5_nsb">&lt;map platform="a" product="x" cascade="merge">
  &lt;topicref href="one.dita" platform="b" product="y">
    &lt;topicref href="two.dita" cascade="nomerge" product="z"/>
  &lt;/topicref>
&lt;/map></codeblock></p>
      <p>In this map, the <xmlatt>cascade</xmlatt> attribute is set to <keyword>merge</keyword> at
        the map level but changes to <keyword>nomerge</keyword> on a topic reference.</p>
      <ul id="ul_sxj_f35_nsb">
        <li>For the reference to <filepath>one.dita</filepath>, the <codeph>cascade="merge"</codeph>
          attribute is in used. This results in an effective <xmlatt>platform</xmlatt> value of
            <keyword>a b</keyword> and an effective <xmlatt>product</xmlatt> value of <keyword>y
            z</keyword>.</li>
        <li>The reference to <filepath>two.dita</filepath> specifies
            <codeph>cascade="nomerge"</codeph>, so attribute values from other elements do not merge
          with anything specified on this reference. The <xmlatt>platform</xmlatt> attribute is not
          specified, so the effective value is <keyword>a b</keyword>, which still cascades from the
          parent element. The <xmlatt>product</xmlatt> value does not merge with values from the
          parent, so the effective value is <keyword>z</keyword>.</li>
      </ul>
    </fig>
  </conbody>
</concept>
