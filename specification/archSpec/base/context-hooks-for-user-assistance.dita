<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-us" id="context-hooks-for-user-assistance">
  <title>Context hooks for user assistance</title>
  <shortdesc>Context hook information can be specified in the
      <xmlelement>resourceid</xmlelement> element in a DITA map or DITA
    topic. This enables processors to generate the support files that are
    required to integrate the user assistance with a specific
    application.</shortdesc>
  <conbody>
    <!--<p>User interfaces for software application often are linked to user assistance (such as help systems and tool tips) through context hooks. </p>-->
    <p><term>Context hooks</term> are identifiers that associate a part of
      the user interface with the location of a help topic. Context hooks
      can be direct links to URIs, but more often they are indirect links,
      such as numeric context identifiers and context strings, that can
      processed into external resource files. These external resource and
      mapping files are then used directly by context-sensitive help
      systems and other downstream applications.</p>
    <p>Context hook information is defined within DITA topics and DITA maps
      through attributes of the <xmlelement>resourceid</xmlelement>
      element.</p>
    <p>Context hooks can define either one-to-one or one-to-many
      relationships between user interface controls and target help
      content.</p>
    <!--<p>In some help systems, a topic might need to be displayed in a specifically sized or featured window. For example, a help topic might need to be displayed immediately adjacent to the user interface control that it supports in a window of a specific size that always remains on top, regardless of the focus within the operating system. Windowing metadata can be defined in the DITA map within the <xmlelement>ux-window</xmlelement> element.</p>-->
    <!--<p>Application metadata that is specified on the <xmlelement>ux-window</xmlelement> element is closely tied to that specific application. It might be ignored when content is rendered for other uses.</p>-->
    <!--<p>The metadata that is available in <xmlelement>resourceid</xmlelement> and <xmlelement>ux-window</xmlelement> provides flexibility for content developers: </p>-->
    <!--<ul><li>You can overload maps and topics with all the metadata that is needed to support multiple help systems. This supports single-sourcing of help content and help metadata.</li><li>You can choose whether to add <xmlelement>resourceid</xmlelement> metadata to <xmlelement>topicref</xmlelement> elements, <xmlelement>prolog</xmlelement> elements, or both. Context-dependent metadata might be best be kept with maps, while persistent, context-independent metadata might best stay with topics in <xmlelement>prolog</xmlelement> elements</li></ul>-->
  </conbody>
</concept>
