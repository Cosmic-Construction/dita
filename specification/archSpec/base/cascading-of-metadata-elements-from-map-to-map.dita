<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-us" id="cascading-of-metadata-elements-from-map-to-map" >
    <title>Cascading of metadata elements from map to map</title>
    <shortdesc>Elements that are contained within <xmlelement>topicmeta</xmlelement> elements follow
        the same rules for cascading from map to map as the rules that apply within a single DITA
        map.</shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm>cascading<indexterm>map-to-map<indexterm>metadata
                        elements</indexterm></indexterm></indexterm>
                <indexterm>map-to-map cascading<indexterm>metadata elements</indexterm></indexterm>
            </keywords>
        </metadata>
    </prolog>
    <conbody>
        <p>For a complete list of which elements cascade within a map, see the column "<ph
                conkeyref="reuse-general/does-it-cascade"/>" in the topic <xref
                href="reconciling-topic-and-map-metadata.dita"/>.</p>
        <draft-comment author="rodaande" audience="spec-editors" time="8 Feb 2022">I don't like
            saying "DITA does not currently support" for a couple reasons. 1) Currently implies it's
            coming, and at this point it's not. 2) I think what we mean is that an application could
            say "This specialized &lt;data> element cascades in a way we recognize" but DITA does
            not define a way to specify that behavior. I think the language should reflect 2) better
            than it does today. Perhaps:<note>It is possible that a specialization might define
                metadata that is intended to replace rather than add to metadata in the referenced
                map, but DITA (by default) does not have a mechanism to specify this
                behavior.</note></draft-comment>
        <note>It is possible that a specialization might define metadata that is intended to replace
            rather than add to metadata in the referenced map, but DITA (by default) does not
            currently support this behavior.</note>
    </conbody>
</concept>
