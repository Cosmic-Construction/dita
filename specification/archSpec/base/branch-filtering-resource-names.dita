<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<concept id="resource-names" xml:lang="en-us" >
    <title>Branch filtering: Impact on resource and key names</title>
    <shortdesc>When map branches are cloned by a processor in order to support multiple condition
        sets, processors must manage conflicting resource and key names. The DITAVALref domain
        includes metadata elements that authors can use to specify how resource and key names are
        renamed.</shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm>branch filtering</indexterm>
            </keywords>
        </metadata>
    </prolog>
    <conbody>
        <note>While the processing controls that are described here are intended primarily for use
            with map branches that specify multiple condition sets, they also can be used with map
            branches that include only a single <xmlelement>ditavalref</xmlelement> element.</note>
        <p>When a map branch uses multiple condition sets, processors create multiple effective
            copies of the branch to support the different conditions. This results in potential
            conflicts for resource names, key names, and key scopes. Metadata elements inside of the
                <xmlelement>ditavalref</xmlelement> element are available to provide control over
            these values, so that keys, key scopes, and URIs can be individually referenced within a
            branch.</p>
        <p>For example, the following map branch references two DITAVAL documents:</p>
        <codeblock>&lt;topicref href="productFeatures.dita" keys="features" keyscope="prodFeatures">
  &lt;ditavalref href="novice.ditaval"/>
  &lt;ditavalref href="admin.ditaval"/>
  &lt;topicref href="newFeature.dita" keys="newThing"/>
&lt;/topicref></codeblock>
        <p>In this case, the processor has two effective copies of
                <filepath>productFeatures.dita</filepath> and <filepath>newFeature.dita</filepath>.
            One copy of each topic is filtered using the conditions specified in
                <filepath>novice.ditaval</filepath>, and the other copy is filtered using the
            conditions specified in <filepath>admin.ditaval</filepath>.</p>
        <p>If an author has referenced a topic using <codeph>keyref="features"</codeph> or
                <codeph>keyref="prodFeatures.features"</codeph>, a processor cannot distinguish
            which filtered copy is the intended target. The metadata elements in the DITAVALref
            domain provide a way to control this scenario.</p>
    </conbody>
</concept>

