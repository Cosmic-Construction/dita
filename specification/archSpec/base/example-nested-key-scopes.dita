<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-us" id="concept_myc_r2g_mp"> 
  <title>Example: Key definitions in nested key scopes</title> 
  <shortdesc>In this scenario, the root map contains nested key scopes, each of
	 which contain duplicate key definitions. The effective key definition depends
	 on key-scope precedence rules. 
  </shortdesc> 
  <conbody> 
	 <p>Consider the following DITA map: 
	 </p> 
	 <codeblock>&lt;map&gt;
  &lt;title&gt;Root map&lt;/title&gt;
  &lt;!-- Root scope --&gt;
  &lt;keydef keys="a" href="topic-1.dita"/&gt;
  
  &lt;!-- Key scope A --&gt;
  &lt;topicgroup keyscope="A"&gt;
    &lt;keydef keys="b" href="topic-2.dita"/&gt;
    
    &lt;!-- Key scope A-1 --&gt;
    &lt;topicgroup keyscope="A-1"&gt;
      &lt;keydef keys="c" href="topic-3.dita"/&gt;
    &lt;/topicgroup&gt;

    &lt;!-- Key scope A-2 --&gt;    
    &lt;topicgroup keyscope="A-2"&gt;
      &lt;keydef keys="d" href="topic-4.dita"/&gt;
    &lt;/topicgroup&gt;
  &lt;/topicgroup&gt; 

  &lt;!-- Key scope B --&gt;  
  &lt;topicgroup keyscope="B"&gt;
    &lt;keydef keys="a" href="topic-5.dita"/&gt;
    &lt;keydef keys="e" href="topic-6.dita"/&gt;

    &lt;!-- Key scope B-1 --&gt;     
    &lt;topicgroup keyscope="B-1"&gt;
      &lt;keydef keys="f" href="topic-7.dita"/&gt;
    &lt;/topicgroup&gt;

    &lt;!-- Key scope B-2 --&gt;
    &lt;topicgroup keyscope="B-2"&gt;
      &lt;keydef keys="g" href="topic-8.dita"/&gt;
    &lt;/topicgroup&gt;
  &lt;/topicgroup&gt;
&lt;/map&gt;</codeblock> 
	 <p>The key scopes in this map form a tree structure. 
	 </p> 
	 <fig>
			<title>Graphical representation of the key scopes</title>
			<image href="../../images/Keyscopes-Illustrated.png" placement="break">
				<alt>Tree structure diagram showing example references to key scope names relative
					to other key scopes. The tree has a root node labeled 'Root' with two children
					'A' and 'B', which in turn have children 'A-1', 'A-2', 'B-1', and 'B-2'. Every
					node has a list of one or more key scope names with different typographic
					styling. In the root node the name 'A' appears with no style, and the following
					labels appear with parentheses: 'A.b', 'A.A-1.c', 'A.A-2.d', 'B.a', 'B.e',
					'B.B-1.f', 'B.B-2.g'. In the A node the name 'b' has no style, and the following
					labels appear with parentheses: 'A-1.c', 'A-2.d'. In the A-1 node the label 'c'
					appears with no style. In the A-2 node the label 'd' appears with no style. In
					the B node the label 'a' appears with square brackets; the label 'e' appears
					with no style; and the following labels appear with parentheses: 'B-1.f',
					'B-2.g'. In the B-1 node the label 'f' appears with no style. In the B-2 node
					the label 'g' appears with no style. </alt>
			</image>
		</fig> 
	 <p>Each box in the diagram represents a key scope; the name of the key
		scope is indicated in bold with upper-case letters. Below the name of the key
		scope, the key definitions that are present in the scope are listed. Different
		typographic conventions are used to indicate where the key definition occurs: 
	 </p> 
	 <dl> 
		<dlentry> 
		  <dt>No styling 
		  </dt> 
		  <dd>The key definition occurs in the immediate key scope and is not
			 overridden by a key definition in a parent scope. For example, key "a" in the
			 root map. 
		  </dd> 
		</dlentry> 
		<dlentry> 
		  <dt>Parentheses 
		  </dt> 
		  <dd>The key definition occurs in a child scope. For example, keys
			 "A-1.c" and "A-2.d" in key scope A. 
		  </dd> 
		</dlentry> 
		<dlentry> 
		  <dt>Brackets 
		  </dt> 
		  <dd>The key definition occurs in the immediate key scope, but it is overridden by a key
					definition in an ancestor scope. For example, key "a" in key scope B. </dd> 
		</dlentry> 
	 </dl> 
	 <p>Arrows point from child to parent scopes. 
	 </p> 
	 <p>Assume that each key scope contains numerous key references. The following tables demonstrate
			how key references resolve in key scopes A-2 and B. The first column shows the value
			used in key references; the second column shows the resource to which the key resolves. </p>
    <fig>
      <title>Key scope A-2</title>
      <simpletable frame="all" relcolwidth="1.0* 1.0*">
        <sthead>
          <stentry>Key reference </stentry>
          <stentry>Resource to which the key resolves </stentry>
        </sthead>
        <strow>
          <stentry>a </stentry>
          <stentry>"a", defined in the root map:
              <filepath>topic-1.dita</filepath>
          </stentry>
        </strow>
        <strow>
          <stentry>d </stentry>
          <stentry>"d", as defined in the immediate key scope:
              <filepath>topic-4.dita</filepath>
          </stentry>
        </strow>
        <strow>
          <stentry>A-2.d </stentry>
          <stentry>"d", as defined in the immediate key scope:
              <filepath>topic-4.dita</filepath>
          </stentry>
        </strow>
        <strow>
          <stentry>c </stentry>
          <stentry>Undefined </stentry>
        </strow>
        <strow>
          <stentry>A-1.c </stentry>
          <stentry>"A-1.c", as defined in key scope A-1. This key name is
            available because it exists in the parent scope, key scope A.
            The key name resolves to <filepath>topic-3.dita</filepath>
          </stentry>
        </strow>
        <strow>
          <stentry>A.A-1.c </stentry>
          <stentry>"A-1.c", as defined in key scope A-1. This key name is
            available because it exists in the root key scope. The key name
            resolves to <filepath>topic-3.dita</filepath>
          </stentry>
        </strow>
      </simpletable>
    </fig>
    <fig>
      <title>Key scope B</title>
      <simpletable frame="topbot" relcolwidth="1.0* 1.0*">
        <sthead>
          <stentry>Key reference </stentry>
          <stentry>Resource to which the key resolves </stentry>
        </sthead>
        <strow>
          <stentry>e </stentry>
          <stentry>"e", defined in the immediate key scope:
              <filepath>topic-6.dita</filepath>
          </stentry>
        </strow>
        <strow>
          <stentry>a </stentry>
          <stentry>"a", as defined in the <i>root key scope</i>. (While a
            key definition for "a" exists in the immediate key scope, it is
            overridden by the key definition that occurs in the parent key
            scope.) The key name resolves to
              <filepath>topic-1.dita</filepath>
          </stentry>
        </strow>
        <strow>
          <stentry>B.a </stentry>
          <stentry>
            <p>"a", as defined in the <i>immediate key scope</i>. Because
              the key reference uses the scope-qualified names, it resolves
              to the key "a" in scope B. The key name resolves to
                <filepath>topic-5.dita</filepath>
            </p>
          </stentry>
        </strow>
        <strow>
          <stentry>g </stentry>
          <stentry>Undefined. The key "g" is defined only in key scope B-2,
            so no unqualified key named "g" is defined in scope B.
          </stentry>
        </strow>
        <strow>
          <stentry>B-2.g </stentry>
          <stentry>"g", as defined in key scope B-2:
              <filepath>topic-8.dita</filepath>. </stentry>
        </strow>
      </simpletable>
    </fig> 
  </conbody>
</concept>
