<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="conref-examples" xml:lang="en-us">
 <title>Conref: Examples</title>
 <shortdesc>Contains <xmlelement>example</xmlelement> elements that are reused throughout the DITA
  specification.</shortdesc>
 <conbody>
  <example id="ditavalref" otherprops="examples">
    <title>Example</title>
    <p>See <xref href="../archSpec/base/examples-of-branch-filter.dita"/> for several examples of
the <xmlelement>ditavalref</xmlelement> element.</p>
   </example>
    <example id="example-subjectScheme" otherprops="examples">
      <title>Example</title>
      <p>The following code sample shows a subject scheme map:</p>
      <codeblock id="codesample">&lt;subjectScheme>
  &lt;!-- Pull in a scheme that defines unix OS values -->
  &lt;schemeref href="unixOS.ditamap"/>
  &lt;!-- Define new OS values that are merged with those in the unixOS scheme -->
  &lt;subjectdef keys="operating-systems">
    &lt;subjectdef keys="linux"/>
    &lt;subjectdef keys="windows"/>
    &lt;subjectdef keys="zOS"/>
  &lt;/subjectdef>
  &lt;!-- Define application values -->
  &lt;subjectdef keys="applications">
    &lt;subjectdef keys="apache-server" href="subject/apache.dita"/>
    &lt;subjectdef keys="my-sql"      href="subject/sql.dita"/>
  &lt;/subjectdef>

  &lt;!-- Define an enumeration of the platform attribute, equal to
       each value in the OS subject. This makes the following values
       valid for the platform attribute: linux, windows, zOS<ph rev="review-e">,
       and the UNIX operating systems defined in unixOS.ditamap</ph> -->
  &lt;enumerationdef>
    &lt;attributedef name="platform"/>
    &lt;subjectdef keyref=<ph rev="review-e">"operating-systems"</ph>/>
  &lt;/enumerationdef>
  &lt;!-- Define an enumeration of the otherprops attribute, equal to
       each value in the application subjects.
       This makes the following values valid for the otherprops attribute:
       apache-server, my-sql -->
  &lt;enumerationdef>
    &lt;attributedef name="otherprops"/>
    &lt;subjectdef keyref="applications"/>
  &lt;/enumerationdef>
&lt;/subjectScheme></codeblock>
    </example>
    <example id="example-subjectHead" otherprops="examples">
      <title>Example</title>
      <p rev="review-d">In the following code sample, the
          <xmlelement>subjectHead</xmlelement> element defines a grouping
        of subjects and associates a label of <q>Server setup</q>. The
        heading covers content about planning, installing, web servers, and
        database applications.</p>
      <codeblock id="example-subjectHead-subjectHeadMeta" rev="review-d">&lt;subjectScheme toc="yes" search="no">
    &lt;!-- ... -->
    &lt;subjectdef keys="server-setup> 
        &lt;subjectHead>
            &lt;subjectHeadMeta>
                &lt;navtitle>Server setup&lt;/navtitle>
            &lt;/subjectHeadMeta>
            &lt;subjectdef keys="planning" href="planningTaskType.dita"/>
            &lt;subjectdef keys="installing" href="installingTaskType.dita"/>
            &lt;subjectdef keys="webServer" href="webServerApp.dita"/>
            &lt;subjectdef keys="database" href="databaseApp.dita"/>
        &lt;/subjectHead>
    &lt;/subjectdef>
    &lt;!-- ... -->
&lt;/subjectScheme></codeblock>
      <p rev="review-d">Note that the <xmlatt>toc</xmlatt> attribute on the
          <xmlelement>subjectScheme</xmlelement> element is set to
          <keyword>yes</keyword>, so that the subject scheme map can be
        rendered and displayed for viewing.</p>
    </example>
    <example id="example-subjectref" otherprops="examples">
      <title>Example</title>
      <p>In the following example, the map is classified as covering the Linux subject, and
          <filepath>developing-web-applications.dita</filepath> is classified as covering the Web
        and development subjects. These subjects (and their keys) are defined externally in a
        subject scheme map; in order to reference the subject directly without the subject scheme
        map, the <xmlatt>href</xmlatt> attribute would be used in place of
        <xmlatt>keyref</xmlatt>.</p>
      <codeblock>&lt;map>
  &lt;title>Working with Linux&lt;/title>
  &lt;topicsubject keyref="linux"/>
  &lt;!-- ... -->
  &lt;topicref href="developing-web-applications.dita">
    &lt;topicsubject>
      <b>&lt;subjectref keyref="web"/></b>
      <b>&lt;subjectref keyref="development"/></b>
    &lt;/topicsubject>
    &lt;!-- ... -->
  &lt;/topicref>
  &lt;!-- ... -->
&lt;/map></codeblock>
    </example>
 </conbody>
</concept>
